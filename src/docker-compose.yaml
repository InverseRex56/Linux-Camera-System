version: '3'
services:

  db: 
    image: postgres
    container_name: db
    build:
      context: ./server/db 
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    # volumes:
    #   - ./server/db-data:/var/lib/postgresql/data
    networks:
      - sdc-network
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
  

  client:
    image: client
    container_name: client
    restart: always
    build:
      context: ./client
    networks:
      - sdc-network
    ports:               
      - "8081:8081"
    volumes:
      - ./client/config.json:/app/config.json

  network:
    image: network
    container_name: network
    # restart: always
    build:
      context: ./server/network
    networks:
      - sdc-network
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

  ui:
    image: ui
    container_name: ui
    restart: always
    build:
      context: ./server/ui
    ports:
      - "8082:3000"
    networks:
      - sdc-network
    depends_on:
      db:
        condition: service_healthy


volumes:
  db-data:


networks:
  sdc-network:
    driver: macvlan
    driver_opts:
      parent: eth0
    ipam:
      driver: default
      config:
        - subnet: 169.254.0.0/16
