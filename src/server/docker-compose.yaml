version: '3'
services:

  db: 
    image: postgres
    container_name: db
    build:
      context: ./db 
    restart: always
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - sdc-network
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 5s
      timeout: 5s
      retries: 5
  

  network:
    image: network
    container_name: network
    restart: always
    build:
      context: ./network
    networks:
      - sdc-network
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy
    environment:
      - IP_ADDRESS=${IP_ADDRESS}

  ui:
    image: ui
    container_name: ui
    restart: always
    build:
      context: ./ui
    networks:
      - sdc-network
    ports:
      - "8082:3000"
    depends_on:
      db:
        condition: service_healthy


volumes:
  db-data:

networks:
  sdc-network:
    driver: bridge
  
# networks:
#   sdc-network:
#     driver: macvlan
#     driver_opts:
#       parent: eth0
#     ipam:
#       driver: default
#       config:
#         - subnet: 169.254.0.0/16
